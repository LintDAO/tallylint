type Result = variant { Ok : bool; Err : text };
type Result_1 = variant { Ok : UserProfile; Err : text };
type Result_2 = variant { Ok : vec WalletProfile; Err : vec WalletProfile };
type UserProfile = record {
  owner : principal;
  name : text;
  create_time : nat64;
};
type WalletAddCommand = record { from : text; name : text; address : text };
type WalletProfile = record {
  id : nat64;
  from : text;
  name : text;
  create_time : nat64;
  address : text;
  holder : principal;
};
service : () -> {
  add_wallet : (WalletAddCommand) -> (Result);
  auto_register_user : () -> (Result_1);
  delete_wallet : (nat64) -> (Result);
  list_all_user : () -> (vec UserProfile);
  query_all_wallets : () -> (Result_2) query;
  user_quantity : () -> (nat32);
}