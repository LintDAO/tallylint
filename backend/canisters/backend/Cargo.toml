[package]
name = "backend"
# TODO somehow middle important level
# name should be main_cainster
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = [
  "cdylib",
] #  necessary to compile this Rust program into WebAssembly module.
# cdy: "C Dynamic Library."
path = "src/lib.rs"

[dependencies]
# 099 or 096 confilct with nns goveranance.
candid = { workspace = true } # for abstraction from backend language . some kind of middle language . decoupling 
# example : rust-backend -> did code  ; python-backend -> did code .
# 099 for rustc nightly version: rustup update nightly
# back to stable: rustup default stable   or: rustup default nightly 
# The core of Rust CDK :
ic-cdk = { workspace = true }

ic-cdk-timers = { workspace = true }

ic-cdk-macros = "0.8.1"

# ic-DB : called "stable memory" 
ic-stable-structures = "0.6.0"

# from dep of dao-rights
serde = "1.0.190"
thiserror = "1.0.48"
# email_address = "0"

#new
# log = "0.4.20"
# ic-nns-governance = "0.8.0"
# ic-nns-governance = { git = "https://github.com/dfinity/ic", rev = "42a4bc4b7917a44c58c9cf907d84b9fd8e908ed9" }
# ic-nns-governance = { git = "https://github.com/dfinity/ic" }

# nns use:
serde_bytes = "0.11.12"

# candid-extractor="0.1.2"
# only need to use in terminal 

# use for plug 
ic-ledger-types = { workspace = true }

# project itself declare. dont know its mechineism. but works - - 
# backend = "0.1.0"

# non-replicate http call from cansiter 
# proxy_canister_types = { git = "https://github.com/omnia-network/ic-http-proxy", package = "proxy_canister_types" }

# logging:
tracing = "0.1.40"
tracing-attributes = "0.1.27"
tracing-subscriber = "0.3.18"
canister_tracing_macros = { path = "../../lib/canister_tracing_macros" } # this path ../ here is not so convinient for universal use. push the lib to crate.io(or any self hold lib) will be better ?
canister_logger = { path = "../../lib/canister_logger" }



serializer = { path = "../../lib/serializer" }
stable_memory = { path = "../../lib/stable_memory" }

serde_json = { workspace = true }

# getrandom = "0.2.11"
getrandom = { version = "0.2.11", features = ["js"] }
tokio = { version = "1.35.1", features = ["rt"] }
# tokio = "1.35.1"
futures = "0.3.30"
# date time tool. maybe cant use in canister runtime
# chrono = "0.4.34"
time = "0.3"




########   DEV lib scope   ########
[dev-dependencies]
#!this above means testing dep scope, avoid dep not compatible with something.
# be careful with this scope. down this [] all dep will only on dev scope.
# i think {} to specifiy the scope as syntax here will be more obvious and clear.

# testing:
pocket-ic = "2.0.1"

# using rust code to interact with ic-replica 
# also means  like simulate  CLI dfx calls .
ic-agent = { workspace = true }

candid_gen = { path = "../../lib/candid_gen" }



########   DEV lib scope   ########