#!/usr/bin/python3
from ic.client import Client
from ic.identity import Identity
from ic.agent import Agent
import os
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.primitives.asymmetric import ec
from cryptography.hazmat.backends import default_backend
from ic.candid import encode, decode, Types

with open("/home/ydr/secret/yindr.pem", "rb") as file:
    pem_string = file.read()

url_local = "https://127.0.0.1:40010"
url_ic = "https://ic0.app/"

iden = Identity.from_pem(pem_string)
client = Client(url=url_local)
agent = Agent(iden, client)


canister_id_local = "be2us-64aaa-aaaaa-qaabq-cai"
canister_id_ic = "v7g7o-oiaaa-aaaag-qcj3q-cai"

file_path = "/home/ydr/code/ic/tax_lint/backend/i_test/new_ctx_struct_all_ic_data.json"
if os.path.exists(file_path):
    with open(file_path, "r") as file:
        payload_json_string = file.read()

ret = agent.query_raw(canister_id_local, "greet_test", encode([]))
print(ret)

params = [
    {"type": Types.Text, "value": payload_json_string},
]
ret = agent.update_raw(
    canister_id_local, "send_payload_string_to_canister", encode(params)
)
print(ret)
