#!/usr/bin//env python3
import os
import subprocess
import sys
import pexpect

#! WARN this script location should not change.other program ref this script


#### preparations
passwd = os.getenv("DFXPASS_BTWLZ")  # data from /etc/enviroment
#!WARN: default using -y tag. may empty local db and api
deploy_local = f"dfx deploy backend -y "
deploy_ic = f"dfx deploy backend --network ic -y"
deploy_cmd = "none"
if len(sys.argv) > 1:
    if sys.argv[1] == "ic":
        deploy_cmd = deploy_ic
    elif sys.argv[1] == "local":
        deploy_cmd = deploy_local
    else:
        print("Invalid argument. Please use 'local' or 'ic'.")
        sys.exit(1)
else:
    print("No argument provided. Please use 'local' or 'ic'.")
    sys.exit(1)


def get_git_root_dir():
    try:
        git_root = subprocess.check_output(["git", "rev-parse", "--show-toplevel"])
        return git_root.decode("utf-8").strip()
    except subprocess.CalledProcessError:
        print("This directory is not part of a git repository.")
        return None


def deploy_backend(deploy_cmd):
    child = pexpect.spawn(deploy_cmd)
    child.expect("Please enter the passphrase for your identity:")
    child.sendline(
        passwd
    )  #! automatically appends a newline character (\n) , like send a enter to it .
    child.interact()  # may need yes sometime


from colorama import Fore, Style


def run_cmd(cmd):
    print(f"{Fore.BLUE}####running: {cmd}{Style.RESET_ALL}")
    process = subprocess.Popen(cmd, stdout=subprocess.PIPE, shell=True)
    output, error = process.communicate()
    print(
        f"{Fore.BLUE}####stdout : {output.decode() if output else 'None'}{Style.RESET_ALL}"
    )
    print(
        f"{Fore.BLUE}####stderr : {error.decode() if error else 'None'}{Style.RESET_ALL}"
    )
    print(f"{Fore.BLUE}####return code : {process.returncode}{Style.RESET_ALL}")
    print()


base_dir = get_git_root_dir()
#### preparations


#!step1: gen did
os.chdir(base_dir)
run_cmd("cargo build --release --target wasm32-unknown-unknown --package backend ")
run_cmd(
    "candid-extractor target/wasm32-unknown-unknown/release/backend.wasm > ./backend/canisters/backend/backend.did"
)


#! step2 : deploy
deploy_backend(deploy_cmd)

#!step3 change did name
os.chdir(os.path.join(base_dir, ".dfx/ic/canisters/backend"))
run_cmd("mv service.did backend.did")
run_cmd("mv service.did.d.ts backend.did.d.ts")
run_cmd("mv service.did.js backend.did.js")

os.chdir(os.path.join(base_dir, ".dfx/local/canisters/backend"))
run_cmd("mv service.did backend.did")
run_cmd("mv service.did.d.ts backend.did.d.ts")
run_cmd("mv service.did.js backend.did.js")

# os.chdir(base_dir)
# run_cmd("git add -f ./.dfx/ic/canisters/backend/backend.did")
# run_cmd("git add -f ./.dfx/ic/canisters/backend/backend.did.d.ts")
# run_cmd("git add -f ./.dfx/ic/canisters/backend/backend.did.js")
# run_cmd("git add -f ./.dfx/ic/canisters/backend/index.js")

# run_cmd("git add -f ./.dfx/local/canisters/backend/backend.did")
# run_cmd("git add -f ./.dfx/local/canisters/backend/backend.did.d.ts")
# run_cmd("git add -f ./.dfx/local/canisters/backend/backend.did.js")
# run_cmd("git add -f ./.dfx/local/canisters/backend/index.js")
